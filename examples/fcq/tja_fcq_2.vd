##Create a Linechart to show the average course rating of all courses over 2009 - 2014.
```
var multi_year_data = loader.csv('./examples/fcq/fcq_all.csv', {})
var terms = ["2009F", "2010W","2010S","2010F","2011W","2011S","2011F","2012W","2012S","2012F","2013W"]

ratings_per_year = _.reject(correlationship(multi_year_data,
  {x: 'Yearterm', x_label: "Year Term",
   y: 'CourseOverall', y_label: "Average Course Rating",
   op: 'average', sort: 'Yearterm', reverse: false
  }),function(n){return isNaN(n['Average Course Rating'])})

//viz.table(ratings_per_year)

var to_linegraph = [ _.range(ratings_per_year.length), _.collect(ratings_per_year, 'Average Course Rating')]

viz.linegraph(to_linegraph, {y_label: "Average Course Rating", x_label: "Year / Term", min_tick: 0.1, maj_tick: 1,
custom_x: terms, text_rotation: 45, padding_b: 80, padding_r: 50})
```

##Create a barchart to show the total number of students taught by instructors?
```
students_taught_per_term = correlationship(multi_year_data,
  {x: 'Yearterm', x_label: "Year Term",
   y: 'FormsRequested', y_label: "Students In Courses",
   op: 'sum', sort: 'Yearterm', reverse: false
  })
console.log(students_taught_per_term)

colors = ["blue","red","green","blue","red","green","blue","red","green","blue","red","green"]

data = _.reject(_.collect(students_taught_per_term, 'Students In Courses'), function(n){return parseFloat(n) < 1})

viz.barchart(data,{labels: terms, height: 300, width: 900, y_label: "Number of Students", colors: colors, min_tick: 10000, maj_tick: 50000})
```
