# Crawling trend.

## Define style for this page.
First of all, you can define style for this page.

```style
min-width: 200px;
max-width: 650px;
margin: 0 auto;
padding: 30px;
```

## Loading data from variable
Let's get started! You can define your variable.

```
var data = [['x', '2013-01-01', '2013-01-02'],
            ['data1', 30, 200]]
```
And then, you might want to plot a graph with C3 syntax.
Please check [syntax of C3](http://c3js.org/samples/timeseries.html).

```c3
c3.generate({
  data: {
    x: 'x',
    columns: data
  },
  axis: {
    x: {
        type: 'timeseries',
        tick: {
          format: '%Y-%m-%d'
        }
    }
  }
})
```
Let's try another one!

```c3
var data2 = [['x', '2013-01-01', '2013-01-02'],
            ['data1', 200, 30]]

c3.generate({
  data: {
    x: 'x',
    columns: data2
  },
  axis: {
    x: {
        type: 'timeseries',
        tick: {
          format: '%Y-%m-%d'
        }
    }
  }
})
```
## Loading data from REST APIs
You can use JSON data by REST APIs for plot.
It will take at least 20 seconds because it uses REST APIs.

```c3
var museAPI = "http://sangheestyle.com:8080/muse/count?callback=?"

getJSON(museAPI).c3.generate({
  data: {
    x: 'date',
    json: response.result,
    keys: {value: ['date', 'count']}
  },
  axis : {
    x : {
      type : 'timeseries',
      tick : {
        format : "%Y-%m-%d"
      },
      label: 'date'
      },
      y: {
          label: 'number of created repo'
      }
  },
  zoom: {
          enabled: true
  }
});
```
You can zoom in and out thanks to `zoom` option. Just use your mouse.

## Loading data from a CSV file.
You can load csv file for plot.

```c3
var chart = c3.generate({
    data: {
        xs: {
            watchers: 'forks',
        },
        url: 'rel_watchers_forks.csv',
        type: 'scatter'
    },
    axis: {
        x: {
            label: 'watchers count',
            tick: {
                fit: false
            }
        },
        y: {
            label: 'forks count'
        }
    },
});
```
One more!

```c3
var chart = c3.generate({
  data: {
      xs: {
          watchers: 'size',
      },
      url: 'rel_watchers_size.csv',
      type: 'scatter'
  },
  axis: {
      x: {
          label: 'watchers count',
          tick: {
              fit: false
          }
      },
      y: {
          label: 'repo size'
      }
  },
});
```

You might want to read [c3 example](http://c3js.org/examples.html).
